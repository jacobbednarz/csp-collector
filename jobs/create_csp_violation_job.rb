require 'json'

class CreateCspViolationJob
  @queue = :create_csp_violations

  KNOWN_UNACTIONABLE_BLOCKED_URIS = %w(
    resource://
    chromenull://
    chrome-extension://
    safari-extension://
    mxjscall://
    webviewprogressproxy://
    res://
    mx://
    safari-resource://
    chromenull://
    chromeinvoke://
    chromeinvokeimmediate://
    mbinit://
    opera://
    localhost
    127.0.0.1
    none://
    chromenull://
    resource://
    about:blank
  )

  attr_accessor :violation_report

  def self.perform(enforced, violation)
    @violation_report = JSON.parse(violation)['csp-report']

    return unless actionable_blocked_uri?
  end

  # Private: Determine if we have an actionable report based on 'blocked-uri'.
  #
  # There are some blocked URIs that we just cannot do anything with. These
  # are generated by things like browser extensions, internal browser pages,
  # MITM proxies and are outside of our control.
  def self.actionable_blocked_uri?
    !KNOWN_UNACTIONABLE_BLOCKED_URIS.include?(@violation_report['blocked-uri'])
  end
end
